@startuml
skinparam linetype ortho
skinparam monochrome true
hide circle
skinparam Shadowing False
skinparam nodesep 100
skinparam ranksep 100
skinparam DefaultFontSize 20
hide empty methods

class Pessoa {
    primeiroNome : String
    ultimoNome : String
    NIF : Int
    dataNascimento : Data
    /idade : Int
    numeroTelefone : Int
    morada : Morada
}

class Trabalhador {
    salario : Int
    horaInicio : Int
    horaFim : Int
    /horasDiarias : Int
}

class Administrador {
    numeroEscritorio : Int
}

class Orientador {}

class Necessitado {}

class Apoio {
    dataInicio : Data
    dataFim : Data
}

class ApoioMonetario {
    valor : Int
}

class ApoioMaterial {}

class ApoioAlojamento {}

class Doacao {
    data : Data
}

class DoacaoMaterial {}

class DoacaoMonetaria {
    valor : int
}

class Produto {}

class ProdutoAlimentar {
    tipo : String
    dataValidade : Data
}

class ProdutoHigiene {
    genero : Bool
}

class ProdutoVestuario {
    tamanho : String
}

class Armazem {
    morada : Morada
    capacidadeTotal : Int
    /capacidadeRestante : int
}

class Abrigo {
    morada : Morada
}

class DoacaoMonetariaRecorrente {
    frequencia : Int
}

class ContaBancaria {
    saldoAtual : Int
    numeroConta : Int
}

class Armazenado {
    quantidade : Int
    dimensao : Int
}

class PedidoApoio {
    data : Data
}

class Morada {
    nomeRua : String
    codRua : Int
}

class Localidade {
    nome : String
    codigoZona : Int
}

class Pais {
    nome : String
}

class Data {
    dia : Int
    mes : Int
    ano : Int
}

'Diferentes pessoas'
Pessoa <|---- Trabalhador
Pessoa <|----- Voluntario
Pessoa <|---- Necessitado

'Diferentes trabalhadores'
Trabalhador <|---- Administrador
Trabalhador <|---- Orientador

'Diferentes doações'
Doacao <|---- DoacaoMaterial
Doacao <|---- DoacaoMonetaria

'Diferentes apoios'
Apoio <|---- ApoioMonetario
Apoio <|---- ApoioMaterial
Apoio <|----- ApoioAlojamento

'Diferentes produtos'
Produto <|---- ProdutoAlimentar
Produto <|---- ProdutoHigiene
Produto <|---- ProdutoVestuario

'Diferentes funções'
Voluntario "*" ---- "0..1" Armazem
Voluntario "*" ----- "0..1" Abrigo
Orientador "1" ----- "*" Apoio
Orientador "1" - "*" Voluntario
(Orientador, Voluntario) ... Formação

'Doar'
Doacao "*" --- "1" Pessoa
DoacaoMaterial "*" ---- "1..*" Produto
DoacaoMonetaria <|--- DoacaoMonetariaRecorrente

'Receber'
Apoio "*" - "1" Necessitado
ApoioMaterial "*" ---- "1..*" Produto

'Alojamento'
ApoioAlojamento "*" --- "1" Abrigo

'Movimentos de conta'
DoacaoMonetaria "*" --- "1" ContaBancaria
ApoioMonetario "*" --- "1" ContaBancaria

'Armazem'
Armazem "1" ---- "*" Produto
(Armazem,Produto) .... Armazenado
Armazem --- Administrador

'Geografico'
Morada "*" --- "1" Localidade
Localidade "*" --- "1" Pais


/'
Dúvidas:
    1. Pedidos de apoio, como representar?
    2. Beneficiários de apoio, como representar?
    3. Doação/Apoio monetário: atributo vs associação?
    4. Doação recorrente? Como definir frequência?  
'/

/'
Ideias:
    1. Apoios de saúde/psicológicos?
'/

'Apoio --- Necessitado'
/'PedidoApoio --- Necessitado
PedidoApoio --- Administrador
class ApoioSaude {}
class ApoioPsicologico {}
class Medico {}
class Psicologo {}
Apoio <|-- ApoioSaude
ApoioSaude <|-- ApoioPsicologico
Trabalhador <|-- Medico
Medico <|-- Psicologo
Psicologo "1" - "*" ApoioPsicologico'/
@enduml